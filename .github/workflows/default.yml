name: CI

on:
  push:
    paths:
    - '.github/**'
    - 'generators/**'
    - 'test/**'
    - 'package.json'
    - 'pnpm-lock.yaml'
  pull_request:
      paths:
      - '.github/**'
      - 'generators/**'
      - 'test/**'
      - 'package.json'
      - 'pnpm-lock.yaml'
  workflow_dispatch:

jobs:
  default:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        node-version: ['lts/*', '*']
        os: [ubuntu-latest, windows-latest]

    steps:
      - uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 1

      - name: Install NSIS on Ubuntu
        if: matrix.os == 'ubuntu-latest'
        run:   |
          sudo apt-get -y update
          sudo apt-get -y install nsis

      - name: Install NSIS on Windows
        if: matrix.os == 'windows-latest'
        shell: pwsh
        run: |
          [Net.ServicePointManager]::SecurityProtocol = "tls12, tls11, tls"
          iwr -useb get.scoop.sh -outfile 'install.ps1'
          .\install.ps1 -RunAsAdmin
          scoop update
          scoop bucket add nsis https://github.com/NSIS-Dev/scoop-nsis
          scoop install nsis/nsis

      - uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Get pnpm store directory
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

      - uses: actions/cache@13aacd865c20de90d75de3b17ebe84f7a17d57d2 # v4.0.0
        name: Setup pnpm cache
        with:
          path: ${{ env.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --strict-peer-dependencies

      - name: Lint Source
        run: pnpm run --if-present lint

      - name: Build Source
        run: pnpm run --if-present build

      - name: Run Tests
        run: pnpm run --if-present test
